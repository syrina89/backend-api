name: pipeline backend
on:
    push:
        branches:
             - main

#userName
#imageName

env:
  IMAGE_NAME: syrina89/back-session7
  BUILD_NUMBER: github.run_number
jobs: 
    test:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: install dependencies
              run: npm i


            - name: Unit Test
              run: |
                rm -rf test-report
                mkdir -p test-report
                npm run test -- --json --outputFile=test-report/output.json || echo "Tests failed but continuing"
                ls -la test-report/ 
                cat test-report/output.json

            - name: Upload test report
              if: always() 
             
              uses: actions/upload-artifact@v4
              with:
                  name: test-report
                  path: test-report/

          

    build-and-push:
        runs-on: ubuntu-latest
        needs: test
        steps:

            - name: checkout
              uses: actions/checkout@v4

            - name: build docker image
              run: docker build -t ${{env.IMAGE_NAME}} .
            
            - name: login to docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: push docker image
              run: docker push ${{env.IMAGE_NAME}}:latest

            - name: tag image with version number
              run: docker tag ${{env.IMAGE_NAME}} ${{env.IMAGE_NAME}}:${{env.BUILD_NUMBER}}
    deploy:
      runs-on: ubuntu-latest
      needs: build-and-push
      steps:
        - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@v1
          with:
            host: ${{ secrets.HOST }}
            username: user
            password: ${{ secrets.PASSWORD }}
            script: |
                cd /home/user/devops-session7/back
                sudo git pull
                sudo docker compose pull
                sudo docker compose up -d --force-recreate --remove-orphans || exit 1


