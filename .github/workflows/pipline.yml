name: pipeline backend
on:
    push:
        branches:
             - main

#userName
#imageName

env:
  IMAGE_NAME: syrina89/back-session7
  BUILD_NUMBER: github.run_number
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs: 
    test:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: install dependencies
              run: npm i


            - name: Unit Test
              run: |
                rm -rf test-report
                mkdir -p test-report
                npm run test -- --json --outputFile=test-report/output.json 

#            - name: Debug output dir
#              run: |
#                  echo "Listing test-report content..."
#                  ls -la test-report/
#                  echo "Content of output.json:"
#                  cat test-report/output.json || echo "output.json not found"
              continue-on-error: true

            - name: Upload test report
              uses: actions/upload-artifact@v4
              with:
                name: test-report
                path: test-report/output.json

            
            - name: Check test results and fail if tests failed
              id: check-tests
              run: |
                # Simple check using Node.js to see if the tests failed
                
                node -e "
                const fs = require('fs');
                const report = JSON.parse(fs.readFileSync('test-report/output.json'));
                if (report.success === false || report.numFailedTests > 0) {
                  console.error('::error::Tests failed. Stopping workflow.');
                  process.exit(1);
                }
                "

 #           - name: cat test result
 #            run: cat test-report/output.json   
            - uses: act10ns/slack@v2
              if: always()
              with:
                  status: ${{ job.status }}
                  steps: ${{ toJson(steps) }}    
                  message: |
                      *Test Phase Results* (${{ job.status }})
                      Branch: ${{ github.ref }}
                      Commit: ${{ github.sha }}
                      Triggered by: ${{ github.actor }}
                      ${{ steps.check-tests.outcome == 'failure' && ':x: Tests failed!' || ':white_check_mark: Tests passed!' }}
                      ${{ steps.check-tests.outcome == 'failure' && format('Test report available: https://github.com/{0}/actions/runs/{1}', github.repository, github.run_id) || '' }}




    build-and-push:
        runs-on: ubuntu-latest
        needs: test
        steps:

            - name: checkout
              uses: actions/checkout@v4

            - name: build docker image
              run: docker build -t ${{env.IMAGE_NAME}} .
            
            - name: login to docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
            

            - name: tag image with version number
              run: docker tag ${{env.IMAGE_NAME}} ${{env.IMAGE_NAME}}:${{env.BUILD_NUMBER}}

            - name: push docker image
              run: docker push ${{env.IMAGE_NAME}}:latest
    deploy:
      runs-on: ubuntu-latest
      needs: build-and-push
      steps:
        - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@v1
          with:
            host: ${{ secrets.HOST }}
            username: user
            password: ${{ secrets.PASSWORD }}
            script: |
                cd /home/user/devops-session7/back
                sudo git pull
                sudo docker compose pull
                sudo docker compose up -d --force-recreate --remove-orphans || exit 1


